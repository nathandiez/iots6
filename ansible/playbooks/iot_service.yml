---
# iot_service.yml - IoT Service deployment playbook
- name: Deploy IoT data processing service
  hosts: iot_servers
  vars:
    iot_service_name: iot_service
    postgres_db: "iotdb"
    postgres_user: "iotuser"
    postgres_password: "{{ lookup('env', 'POSTGRES_PASSWORD') | default('iotpass') }}"
    postgres_port: "5432"
    mqtt_broker_ip: "{{ lookup('env', 'MQTT_BROKER_IP') | default('localhost') }}"
    mqtt_port: "1883"
    iot_service_dir: /home/{{ ansible_user | default('nathan') }}/iot_service

  tasks:
    - name: Create IoT service directory
      ansible.builtin.file:
        path: "{{ iot_service_dir }}"
        state: directory
        mode: '0755'
      become: yes

    - name: Copy IoT service files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ iot_service_dir }}/{{ item.dest }}"
        mode: '0644'
      with_items:
        - { src: "../../services/iot_service/iot_service.py", dest: "iot_service.py" }
        - { src: "../../services/iot_service/requirements.txt", dest: "requirements.txt" }
        - { src: "../../services/iot_service/Dockerfile", dest: "Dockerfile" }
      become: yes

    - name: Build IoT service Docker image
      community.docker.docker_image:
        name: "{{ iot_service_name }}:latest"
        source: build
        build:
          path: "{{ iot_service_dir }}"
          nocache: yes
      become: yes

    - name: Start IoT service container
      community.docker.docker_container:
        name: "{{ iot_service_name }}"
        image: "{{ iot_service_name }}:latest"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: iot_network
        env:
          POSTGRES_DB: "{{ postgres_db }}"
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          POSTGRES_HOST: "timescaledb"
          POSTGRES_PORT: "{{ postgres_port }}"
          MQTT_BROKER: "mosquitto"
          MQTT_PORT: "{{ mqtt_port }}"
      become: yes

    - name: Wait for IoT service to be ready
      ansible.builtin.pause:
        seconds: 10

    - name: Check IoT service container status
      community.docker.docker_container_info:
        name: "{{ iot_service_name }}"
      register: iot_service_info
      become: yes

    - name: Display IoT service status
      ansible.builtin.debug:
        msg: "IoT Service Status: {{ 'Running' if iot_service_info.container.State.Running else 'Not Running' }}"
